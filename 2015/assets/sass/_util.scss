/* ==========================================================================
    MIXINS
   ========================================================================== */

// breakpoint mixins
@mixin border-radius-fix($w) {
  @include border-top-left-radius($w);
  @include border-top-right-radius($w);
  @include border-bottom-left-radius($w);
  @include border-bottom-right-radius($w);
}

@mixin desktop {
  @media (min-width: $desktop) {
    @content
  }
}

@mixin tablet {
  @media (max-width: $desktop - 1) {
    @content
  }
}

@mixin phone {
  @media (max-width: $phone) {
    @content
  }
}

// aspect ratio
// rewritten, simplified
@mixin aspect-ratio($w, $h) {
  $slope: $h / $w;
  $height: $h - $w * $slope;
  padding-top: $slope * 100%;
}

// keyframes mixin
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

// add a slash before your item
@mixin slash($_height: 10px, $_margin: 5px, $_width: 4px, $_skew: -20deg) {
    &:before {
        content: ' ';
        width: $_width;
        height: $_height;
        background-color: $color_slash;
        display: inline-block;
        margin-right: $_margin;
        @include transform(skewX($_skew));
        .rtl & {
            margin-left: $_margin;
            margin-right: 0px;
        }
    }
}

// add an arrow after your item
@mixin arrow($position: 'down', $_height: 6px, $_width: 8px, $_color: black) {
    &:after {
        content: " ";
        display: inline-block;
        width: 0px;
        height: 0px;
        border-style: solid;
        margin-bottom: $_height / 2;
        @if $position == 'down' {
          border-width: $_height $_width / 2 0 $_width / 2;
          border-color: $_color transparent transparent transparent;
        } @else if $position == 'up' {
          border-width: 0 $_width / 2 $_height $_width / 2;
          border-color: transparent transparent $_color transparent;
        } @else if $position == 'left' {
          border-width: $_height / 2 $_width $_height / 2 0;
          border-color: transparent $_color transparent transparent;
        } @else if $position == 'right' {
          border-width: $_height / 2 0 $_height / 2 $_width;
          border-color: transparent transparent transparent $_color;
        }
    }
}

// background gradients that work in IE
@mixin background-image-with-ms($image) {
    @include background-image($image); // Compass default version, for everything but IE 10.
    background-image: -ms-#{$image}; // Vendor prefixes for IE 10.
}

@mixin clearfix {
    zoom:1;
    &:before, &:after {
        content: "\0020";
        display: block;
        height: 0;
        overflow: hidden;
    }
    &:after {
        clear: both;
    }
}

// gradient over bottom of content
@mixin text-gradient($height: 80px, $width: 100%, $color: $bgSiteColor) {
  &:before {
    bottom: 0;
    content: "";
    height: $height;
    left: 0;
    pointer-events: none;
    position: absolute;
    right: 0;
    width: 100%;
    width: $width;
    z-index: 200;
    @include transition(height 0.5s $easeInOutCubic);
    @include linear-gradient(rgba($color,0) 0%, $color 100%, $fallback: transparent);
  }
  .lt-ie10 & {
    &:before {
      // No gradient for <IE10 because there's no pointer-events
      display: none;
      height: 0;
    }
  }
}

// util classes
.clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}



/* ==========================================================================
   KEYFRAME ANIMATIONS
========================================================================== */

@include keyframes(breakingNewsFrames) {
  50% {
    height: 0px;
    padding: 0px;
  }
  51% {
    height: 0px;
    padding: 0px;
    position: fixed;
    top: 90px;
  }
  100% {
    position: fixed;
    top: 90px;
    height: 80px;
    padding: 25px 0px;
  }
}

// from http://codepen.io/Venerons/pen/BvHbK

@include keyframes(gelatine) {
  from, to { @include transform(scale(1, 1)); }
  25% { @include transform(scale(0.9, 1.1)); }
  50% { @include transform(scale(1.1, 0.9)); }
  75% { @include transform(scale(0.95, 1.05)); }
}

@include keyframes(bounce-in) {
  0% {
    opacity: 0;
    @include transform(scale(.1));
  }
  50% {
    opacity: 1;
    @include transform(scale(1.1));
  }
  70% { @include transform(scale(.9)); }
  100% { @include transform(scale(1)); }
}

@include keyframes(fade-out-in) {
  5% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
  95% { 
    opacity: 1;
  }
}

@include keyframes(bouncedelay) {
  0%, 80%, 100% {@include transform(scale(0.0)) }
  40% { @include transform(scale(1.0)) }
}

// animations for loader spinner

@include keyframes(rotation) {
   from {@include transform(rotate(0deg));}
   to {@include transform(rotate(359deg));}
}
